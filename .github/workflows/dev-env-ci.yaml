name: dev-env container image CI

on:
  push:
    branches:
      - master
    paths:
      - .npmrc
      - Dockerfile
      - coc-package.json
      - entrypoint.sh
      - fishfile
      - init.vim
      - package.json
  pull_request:
    branches:
      - master
    paths:
      - .npmrc
      - Dockerfile
      - coc-package.json
      - entrypoint.sh
      - fishfile
      - init.vim
      - package.json
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (latest, nightly, none)'
        required: true
        default: none
      push:
        description: 'If exectute docker push with build'
        required: true
        default: "false"

jobs:
  build:
    name: Build dev-env container image
    runs-on: ubuntu-latest
    steps:
      - name: Detect parameter
        id: detect-parameter
        run: |
          echo "Trigger on ${{ github.event_name }}"
          if   [ ${{ github.event_name }} = "push" ]; then
            echo "::set-output name=version::latest"
            echo "::set-output name=push::true"
          elif [ ${{ github.event_name }} = "pull_request" ]; then
            echo "::set-output name=version::none"
            echo "::set-output name=push::false"
          else [ ${{ github.event_name }} = "workflow_dispatch" ];
            echo "::set-output name=version::${{ github.event.inputs.version }}"
            echo "::set-output name=push::${{ github.event.inputs.push }}"
          fi
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./docker/dev-env.dockerfile
          push: ${{ steps.detect-parameter.outputs.push }}
          tags: miya10kei/dev-env:${{ steps.detect-parameter.outputs.version }}
      - name: Print image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Notify result to Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
